import streamlit as st
import math

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üìè –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É–∫–ª–æ–Ω–æ–≤ –∏ –æ—Ç–º–µ—Ç–æ–∫")
st.markdown("–í—ã—á–∏—Å–ª–µ–Ω–∏—è —É–∫–ª–æ–Ω–æ–≤, –æ—Ç–º–µ—Ç–æ–∫ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∑–∞–¥–∞—á.")

# –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
st.divider()


# --- –§—É–Ω–∫—Ü–∏–∏ ---
def calculate_slope(point1: float, point2: float, distance: float) -> dict:
    """–í—ã—á–∏—Å–ª—è–µ—Ç —É–∫–ª–æ–Ω –≤ %, ‚Ä∞ –∏ —É–≥–æ–ª –≤ –≥—Ä–∞–¥—É—Å–∞—Ö."""
    height_diff = point2 - point1
    slope_percent = (height_diff / distance) * 100
    slope_permille = slope_percent * 10
    slope_angle = math.degrees(math.atan(height_diff / distance))
    return {
        "percent": round(slope_percent, 2),
        "permille": round(slope_permille, 2),
        "angle": round(slope_angle, 2)
    }


def calculate_mark(point1: float, distance: float, slope_permille: float) -> float:
    """–í—ã—á–∏—Å–ª—è–µ—Ç –≤—Ç–æ—Ä—É—é –æ—Ç–º–µ—Ç–∫—É –ø–æ —É–∫–ª–æ–Ω—É (–≤ ‚Ä∞)."""
    slope_percent = slope_permille / 10
    height_diff = (slope_percent / 100) * distance
    return round(point1 + height_diff, 2)


def calculate_distance(point1: float, point2: float, slope_permille: float) -> float:
    """–í—ã—á–∏—Å–ª—è–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ —Ä–∞–∑–Ω–∏—Ü–µ –æ—Ç–º–µ—Ç–æ–∫ –∏ —É–∫–ª–æ–Ω—É (–≤ ‚Ä∞)."""
    height_diff = abs(point2 - point1)
    slope_percent = slope_permille / 10
    if slope_percent == 0:
        raise ValueError("–£–∫–ª–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0‚Ä∞ ‚Äî –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å.")
    distance = height_diff / (slope_percent / 100)
    return round(distance, 2)


# --- –í–∫–ª–∞–¥–∫–∏ –≤ Streamlit ---
tab1, tab2, tab3 = st.tabs(["üîç –ù–∞–π—Ç–∏ —É–∫–ª–æ–Ω", "üéØ –ù–∞–π—Ç–∏ –æ—Ç–º–µ—Ç–∫—É", "üìè –ù–∞–π—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ"])

# --- –í–∫–ª–∞–¥–∫–∞ 1: –ù–∞–π—Ç–∏ —É–∫–ª–æ–Ω ---
with tab1:
    st.header("–†–∞—Å—á—ë—Ç —É–∫–ª–æ–Ω–∞")
    with st.form("slope_form"):
        point1 = st.number_input("–ü–µ—Ä–≤–∞—è –æ—Ç–º–µ—Ç–∫–∞ (–º)", value=0.0, step=0.1, key="slope_p1")
        point2 = st.number_input("–í—Ç–æ—Ä–∞—è –æ—Ç–º–µ—Ç–∫–∞ (–º)", value=0.0, step=0.1, key="slope_p2")
        distance = st.number_input("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ (–º)", value=1.0, min_value=0.1, step=0.1, key="slope_dist")

        submitted1 = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —É–∫–ª–æ–Ω")

    if submitted1:
        try:
            result = calculate_slope(point1, point2, distance)
            st.success(
                f"–£–∫–ª–æ–Ω: **{result['percent']}%** ({result['permille']}‚Ä∞), "
                f"—É–≥–æ–ª: **{result['angle']}¬∞**"
            )
        except Exception as e:
            st.error("–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ —É–∫–ª–æ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")


# --- –í–∫–ª–∞–¥–∫–∞ 2: –ù–∞–π—Ç–∏ –æ—Ç–º–µ—Ç–∫—É ---
with tab2:
    st.header("–†–∞—Å—á—ë—Ç –≤—Ç–æ—Ä–æ–π –æ—Ç–º–µ—Ç–∫–∏")
    with st.form("mark_form"):
        point1 = st.number_input("–ò—Å—Ö–æ–¥–Ω–∞—è –æ—Ç–º–µ—Ç–∫–∞ (–º)", value=0.0, step=0.1, key="mark_p1")
        distance = st.number_input("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–º)", value=10.0, min_value=0.0, step=0.1, key="mark_dist")
        slope_permille = st.number_input("–£–∫–ª–æ–Ω (–≤ –ø—Ä–æ–º–∏–ª–ª–µ, ‚Ä∞)", value=10.0, step=1.0, key="mark_slope")

        submitted2 = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É")

    if submitted2:
        try:
            new_mark = calculate_mark(point1, distance, slope_permille)
            st.success(f"–ù–æ–≤–∞—è –æ—Ç–º–µ—Ç–∫–∞: **{new_mark} –º**")
        except Exception as e:
            st.error("–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ –æ—Ç–º–µ—Ç–∫–∏.")


# --- –í–∫–ª–∞–¥–∫–∞ 3: –ù–∞–π—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ ---
with tab3:
    st.header("–†–∞—Å—á—ë—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è")
    with st.form("distance_form"):
        point1 = st.number_input("–ü–µ—Ä–≤–∞—è –æ—Ç–º–µ—Ç–∫–∞ (–º)", value=0.0, step=0.1, key="dist_p1")
        point2 = st.number_input("–í—Ç–æ—Ä–∞—è –æ—Ç–º–µ—Ç–∫–∞ (–º)", value=1.0, step=0.1, key="dist_p2")
        slope_permille = st.number_input("–£–∫–ª–æ–Ω (–≤ –ø—Ä–æ–º–∏–ª–ª–µ, ‚Ä∞)", value=10.0, step=1.0, key="dist_slope")

        submitted3 = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ")

    if submitted3:
        try:
            dist = calculate_distance(point1, point2, slope_permille)
            st.success(f"–¢—Ä–µ–±—É–µ–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: **{dist} –º**")
        except ValueError as e:
            st.error(str(e))
        except Exception as e:
            st.error("–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è.")


# --- –ü–æ–¥–≤–∞–ª ---
st.divider()
st.caption("üí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —É–∫–ª–æ–Ω–æ–≤, –æ—Ç–º–µ—Ç–æ–∫ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥–æ—Ä–æ–∂–Ω–æ–º/–∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.")